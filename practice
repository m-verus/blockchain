const SHA256 = require("crypto-js/sha256");

class Block{
    constructor(index, timestamp, data, previousHash = '') {
        this.index = index;
        this.previousHash = previousHash;
        this.timestamp = timestamp;
        this.data = data;
        this.hash = this.calculateHash();

    }

    calculateHash() {
        return SHA256 (this.index + this.previousHash + this.timestamp + JSON.stringify(this.data)).toString();
    }
}

class Blockchain {
    constructor () {
        this.chain = [this.createGenesisBlock()];
        this.difficulty = 2;
    }

    createGenesisBlock() {
        return new Block (0, "12/17/2020", "Genesis Block", "0");
    }

    getLatestBlock() {
        return this.chain[this.chain.length - 1];
    }

    addBlock(newBlock) {
        newBlock.previousHash = this.getLatestBlock().hash;
        newBlock.hash = newBlock.calculateHash();
        this.chain.push(newBlock);
    }
}

let mattgcoin = new Blockchain();
mattgcoin.addBlock(new Blockchain(1, "12/18/2020", {Sender: "Chris", Recipient: "Mike", qty: 145.6879}));
mattgcoin.addBlock(new Blockchain(2, "12/19/2020", {Sender: "Lake", Recipient: "Iris", qty: 9384.23}));
console.log(JSON.stringify(mattgcoin, null, 4));
